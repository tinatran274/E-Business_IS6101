// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"time"

	"github.com/google/uuid"
)

type Account struct {
	ID        uuid.UUID  `json:"id"`
	UserID    uuid.UUID  `json:"user_id"`
	Email     string     `json:"email"`
	Password  string     `json:"password"`
	Status    string     `json:"status"`
	CreatedAt time.Time  `json:"created_at"`
	CreatedBy *uuid.UUID `json:"created_by"`
	UpdatedAt time.Time  `json:"updated_at"`
	UpdatedBy *uuid.UUID `json:"updated_by"`
	DeletedAt *time.Time `json:"deleted_at"`
	DeletedBy *uuid.UUID `json:"deleted_by"`
}

type Cart struct {
	UserID           uuid.UUID `json:"user_id"`
	ProductVariantID uuid.UUID `json:"product_variant_id"`
	Quantity         int32     `json:"quantity"`
}

type Category struct {
	ID          uuid.UUID  `json:"id"`
	Name        string     `json:"name"`
	Description *string    `json:"description"`
	Status      string     `json:"status"`
	CreatedAt   time.Time  `json:"created_at"`
	CreatedBy   *uuid.UUID `json:"created_by"`
	UpdatedAt   time.Time  `json:"updated_at"`
	UpdatedBy   *uuid.UUID `json:"updated_by"`
	DeletedAt   *time.Time `json:"deleted_at"`
	DeletedBy   *uuid.UUID `json:"deleted_by"`
}

type Dish struct {
	ID          uuid.UUID  `json:"id"`
	Name        string     `json:"name"`
	Description *string    `json:"description"`
	CategoryID  uuid.UUID  `json:"category_id"`
	Status      string     `json:"status"`
	CreatedAt   time.Time  `json:"created_at"`
	CreatedBy   *uuid.UUID `json:"created_by"`
	UpdatedAt   time.Time  `json:"updated_at"`
	UpdatedBy   *uuid.UUID `json:"updated_by"`
	DeletedAt   *time.Time `json:"deleted_at"`
	DeletedBy   *uuid.UUID `json:"deleted_by"`
}

type Favorite struct {
	DishID uuid.UUID `json:"dish_id"`
	UserID uuid.UUID `json:"user_id"`
	Value  int32     `json:"value"`
}

type File struct {
	ID         uuid.UUID  `json:"id"`
	BelongToID uuid.UUID  `json:"belong_to_id"`
	FilePath   string     `json:"file_path"`
	FileType   string     `json:"file_type"`
	Status     string     `json:"status"`
	CreatedAt  time.Time  `json:"created_at"`
	CreatedBy  *uuid.UUID `json:"created_by"`
	UpdatedAt  time.Time  `json:"updated_at"`
	UpdatedBy  *uuid.UUID `json:"updated_by"`
	DeletedAt  *time.Time `json:"deleted_at"`
	DeletedBy  *uuid.UUID `json:"deleted_by"`
}

type Ingredient struct {
	ID          uuid.UUID  `json:"id"`
	Name        string     `json:"name"`
	Description *string    `json:"description"`
	Removal     float64    `json:"removal"`
	Kcal        float64    `json:"kcal"`
	Protein     float64    `json:"protein"`
	Lipits      float64    `json:"lipits"`
	Glucids     float64    `json:"glucids"`
	Canxi       float64    `json:"canxi"`
	Phosphor    float64    `json:"phosphor"`
	Fe          float64    `json:"fe"`
	VitaminA    float64    `json:"vitamin_a"`
	VitaminB1   float64    `json:"vitamin_b1"`
	VitaminB2   float64    `json:"vitamin_b2"`
	VitaminC    float64    `json:"vitamin_c"`
	VitaminPp   float64    `json:"vitamin_pp"`
	BetaCaroten float64    `json:"beta_caroten"`
	CategoryID  uuid.UUID  `json:"category_id"`
	Status      string     `json:"status"`
	CreatedAt   time.Time  `json:"created_at"`
	CreatedBy   *uuid.UUID `json:"created_by"`
	UpdatedAt   time.Time  `json:"updated_at"`
	UpdatedBy   *uuid.UUID `json:"updated_by"`
	DeletedAt   *time.Time `json:"deleted_at"`
	DeletedBy   *uuid.UUID `json:"deleted_by"`
}

type Order struct {
	ID              uuid.UUID  `json:"id"`
	UserID          uuid.UUID  `json:"user_id"`
	OrderDate       time.Time  `json:"order_date"`
	ReceiverName    string     `json:"receiver_name"`
	ReceiverPhone   string     `json:"receiver_phone"`
	ReceiverAddress string     `json:"receiver_address"`
	ShippingCost    float64    `json:"shipping_cost"`
	PaymentMethodID uuid.UUID  `json:"payment_method_id"`
	PaymentStatus   string     `json:"payment_status"`
	ShippingStatus  string     `json:"shipping_status"`
	OrderStatus     string     `json:"order_status"`
	CreatedAt       time.Time  `json:"created_at"`
	CreatedBy       *uuid.UUID `json:"created_by"`
	UpdatedAt       time.Time  `json:"updated_at"`
	UpdatedBy       *uuid.UUID `json:"updated_by"`
	DeletedAt       *time.Time `json:"deleted_at"`
	DeletedBy       *uuid.UUID `json:"deleted_by"`
}

type OrderItem struct {
	OrderID          uuid.UUID `json:"order_id"`
	ProductVariantID uuid.UUID `json:"product_variant_id"`
	Quantity         int32     `json:"quantity"`
	RetailPrice      float64   `json:"retail_price"`
}

type PaymentMethod struct {
	ID          uuid.UUID  `json:"id"`
	Name        string     `json:"name"`
	Description *string    `json:"description"`
	Status      string     `json:"status"`
	CreatedAt   time.Time  `json:"created_at"`
	CreatedBy   *uuid.UUID `json:"created_by"`
	UpdatedAt   time.Time  `json:"updated_at"`
	UpdatedBy   *uuid.UUID `json:"updated_by"`
	DeletedAt   *time.Time `json:"deleted_at"`
	DeletedBy   *uuid.UUID `json:"deleted_by"`
}

type Product struct {
	ID          uuid.UUID  `json:"id"`
	Name        string     `json:"name"`
	Description *string    `json:"description"`
	Brand       *string    `json:"brand"`
	Origin      *string    `json:"origin"`
	UserGuide   *string    `json:"user_guide"`
	CategoryID  uuid.UUID  `json:"category_id"`
	Status      string     `json:"status"`
	CreatedAt   time.Time  `json:"created_at"`
	CreatedBy   *uuid.UUID `json:"created_by"`
	UpdatedAt   time.Time  `json:"updated_at"`
	UpdatedBy   *uuid.UUID `json:"updated_by"`
	DeletedAt   *time.Time `json:"deleted_at"`
	DeletedBy   *uuid.UUID `json:"deleted_by"`
}

type ProductCategory struct {
	ID          uuid.UUID  `json:"id"`
	Name        string     `json:"name"`
	Description *string    `json:"description"`
	Status      string     `json:"status"`
	CreatedAt   time.Time  `json:"created_at"`
	CreatedBy   *uuid.UUID `json:"created_by"`
	UpdatedAt   time.Time  `json:"updated_at"`
	UpdatedBy   *uuid.UUID `json:"updated_by"`
	DeletedAt   *time.Time `json:"deleted_at"`
	DeletedBy   *uuid.UUID `json:"deleted_by"`
}

type ProductVariant struct {
	ID          uuid.UUID  `json:"id"`
	ProductID   uuid.UUID  `json:"product_id"`
	Description *string    `json:"description"`
	Color       string     `json:"color"`
	RetailPrice float64    `json:"retail_price"`
	Stock       int32      `json:"stock"`
	Status      string     `json:"status"`
	CreatedAt   time.Time  `json:"created_at"`
	CreatedBy   *uuid.UUID `json:"created_by"`
	UpdatedAt   time.Time  `json:"updated_at"`
	UpdatedBy   *uuid.UUID `json:"updated_by"`
	DeletedAt   *time.Time `json:"deleted_at"`
	DeletedBy   *uuid.UUID `json:"deleted_by"`
}

type Recipe struct {
	DishID       uuid.UUID `json:"dish_id"`
	IngredientID uuid.UUID `json:"ingredient_id"`
	Unit         float64   `json:"unit"`
}

type Statistic struct {
	UpdatedAt        time.Time `json:"updated_at"`
	UserID           uuid.UUID `json:"user_id"`
	MorningCalories  float64   `json:"morning_calories"`
	LunchCalories    float64   `json:"lunch_calories"`
	DinnerCalories   float64   `json:"dinner_calories"`
	SnackCalories    float64   `json:"snack_calories"`
	ExerciseCalories float64   `json:"exercise_calories"`
}

type User struct {
	ID            uuid.UUID  `json:"id"`
	FirstName     *string    `json:"first_name"`
	LastName      *string    `json:"last_name"`
	Username      *string    `json:"username"`
	Age           *int32     `json:"age"`
	Height        *int32     `json:"height"`
	Weight        *int32     `json:"weight"`
	Gender        *string    `json:"gender"`
	ExerciseLevel *string    `json:"exercise_level"`
	Aim           *string    `json:"aim"`
	Status        string     `json:"status"`
	CreatedAt     time.Time  `json:"created_at"`
	CreatedBy     *uuid.UUID `json:"created_by"`
	UpdatedAt     time.Time  `json:"updated_at"`
	UpdatedBy     *uuid.UUID `json:"updated_by"`
	DeletedAt     *time.Time `json:"deleted_at"`
	DeletedBy     *uuid.UUID `json:"deleted_by"`
}
